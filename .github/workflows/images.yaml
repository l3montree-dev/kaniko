name: Build images

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
    branches:
      - main
      
permissions: {}

jobs:
  build-images:
    concurrency:
      # If a previous run is ongoing with the same head_ref (it's a run on the
      # same PR) then cancel it to save time. If it isn't a PR, only cancel the
      # previous run if it's on the same commit SHA. This prevents a run for a
      # commit push from cancelling a previous commit push's build, since we
      # want an image built and tagged for each commit.
      group: build-images-${{ matrix.image }}-${{ github.head_ref || github.sha }}
      cancel-in-progress: true

    permissions:
      contents: read  # Read the repo contents.

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - executor
          - executor-debug
          - executor-slim
          - warmer

        include:
          - image: executor
            target: kaniko-executor
            platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
            image-name: ghcr.io/l3montree-dev/kaniko/executor
            tag: ${{ github.ref_name }}
            release-tag: latest

          - image: executor-debug
            target: kaniko-debug
            platforms: linux/amd64,linux/arm64,linux/s390x
            image-name: ghcr.io/l3montree-dev/kaniko/executor
            tag: ${{ github.ref_name }}-debug
            release-tag: debug

          - image: executor-slim
            target: kaniko-slim
            platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
            image-name: ghcr.io/l3montree-dev/kaniko/executor
            tag: ${{ github.ref_name }}-slim
            release-tag: slim

          - image: warmer
            target: kaniko-warmer
            platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
            image-name: ghcr.io/l3montree-dev/kaniko/warmer
            tag: ${{ github.ref_name }}
            release-tag: latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Don't build for all platforms on PRs.
      - id: platforms
        run: |
          event="${{ github.event_name }}"
          if [[ "$event" == "pull_request" ]]; then
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          else
            platforms="${{ matrix.platforms }}"
            echo "platforms=${platforms}" >> $GITHUB_OUTPUT
          fi
      # Build and push with Docker.
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: ${{ matrix.platforms }}

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build-and-push
        with:
          context: .
          file: ./deploy/Dockerfile
          platforms: ${{ steps.platforms.outputs.platforms }}
          push: true
          tags: ${{ matrix.image-name }}:${{ matrix.tag }}
          no-cache-filters: certs
          # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#github-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: ${{ matrix.target }}
